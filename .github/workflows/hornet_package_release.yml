name: Build and Release Package

on:
  push:
    branches:
      - develop
    paths-ignore:
      - 'package.py'
      - 'client/ayon_nuke/version.py'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Increment version
        id: increment_version
        run: |
          # Extract current version from package.py
          CURRENT_VERSION=$(grep "^version = " package.py | sed 's/version = "\(.*\)"/\1/')
          echo "Current version: $CURRENT_VERSION"

          # Split the version to get parts
	  VERSION_BASE=$(echo "$CURRENT_VERSION" | rev | cut -d. -f2- | rev)
	  SUFFIX_NUMBER=$(echo "$CURRENT_VERSION" | rev | cut -d. -f1 | rev)

          # Increment suffix number
          NEW_SUFFIX_NUMBER=$((SUFFIX_NUMBER+1))
          NEW_VERSION="${VERSION_BASE}.${NEW_SUFFIX_NUMBER}"
          echo "New version: $NEW_VERSION"

          # Update package.py
          sed -i "s/version = \".*\"/version = \"$NEW_VERSION\"/" package.py

          # Update client/ayon_nuke/version.py
          # Use the main part of the version (before the dash)
          NEW_CLIENT_VERSION=$(echo $NEW_VERSION | cut -d'-' -f1)

          # Update the client version file
          if grep -q "\*\*version\*\*" client/ayon_nuke/version.py; then
            sed -i "s/\*\*version\*\* = \".*\"/\*\*version\*\* = \"$NEW_CLIENT_VERSION\"/" client/ayon_nuke/version.py
          else
            sed -i "s/__version__ = \".*\"/__version__ = \"$NEW_CLIENT_VERSION\"/" client/ayon_nuke/version.py
          fi

          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create package
        run: |
          # Run create_package.py
          python create_package.py

          # Verify the package was created
          ls -la package/

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.increment_version.outputs.version }}
          name: Release v${{ steps.increment_version.outputs.version }}
          draft: false
          prerelease: false
          files: |
            package/nuke-${{ steps.increment_version.outputs.version }}.zip
          generate_release_notes: true

      - name: Commit version changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.py client/ayon_nuke/version.py
          git commit -m "CI bump version to ${{ steps.increment_version.outputs.version }}"
          git push
